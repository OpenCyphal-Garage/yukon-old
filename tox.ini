#
# We test yukon using python 3.7 - 3.8.
#
# The standard version to develop against is 3.8. We limit mypy checking to 3.8.
#
[tox]
envlist = {py37,py38}-{test,doctest},pylint,eslint,mypy,report,docs,package
setupdir = {toxinidir}/src/yukon/backend

[base]
deps =
    Sybil
    pytest
    pytest-timeout
    coverage


[dev]
deps =
    autopep8
    rope
    isort
    quart 
    quart_cors
    typing

# +---------------------------------------------------------------------------+
# | CONFIGURATION
# +---------------------------------------------------------------------------+


[flake8]
max-complexity = 10
max-line-length = 120
doctests = True
statistics = True
show-source = True


[pytest]
addopts = --doctest-modules
log_cli = true
log_cli_level = DEBUG


[coverage:run]
branch=True
parallel=True
include =
    src/yukon/backend/src/*
    .tox/*/site-packages/yukon/*

omit = 
    */setup.py
    */conf.py


[coverage:paths]
source =
    src/yukon/backend/src
    .tox/*/site-packages
    .tox/*/bin


[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    assert False
    if False:
    if __name__ == .__main__.:


[doc8]
max-line-length = 120
verbose = 1


[mypy]
# Python version is not specified to allow checking against different versions
warn_return_any = False
warn_unused_configs = True
disallow_untyped_defs = True
check_untyped_defs = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
show_error_context = True
mypy_path = src/yukon/backend/src


[mypy-pytest.*]
ignore_missing_imports = True


[mypy-sybil.*]
ignore_missing_imports = True


[mypy-quart.*]
ignore_missing_imports = True


[mypy-quart_cors.*]
ignore_missing_imports = True


[mypy-api.*]
ignore_missing_imports = True


[mypy-controllers.nodes.*]
ignore_missing_imports = True



# +---------------------------------------------------------------------------+
# | TOX ENVIRONMENTS
# +---------------------------------------------------------------------------+


[testenv]
usedevelop = true
setenv =
    PYTHONDONTWRITEBYTECODE=1
    PYTHONPATH={toxinidir}/src/yukon/backend

passenv =
    BUILDKITE
    BUILDKITE_*
    PYPI_PASSWORD
    SONARQUBE_TOKEN
    YUKON_MAJOR_MINOR_VERSION
    YUKON_FULL_VERSION

deps = 
    test: {[dev]deps}
    test,doctest: {[base]deps}

commands =
    test: coverage run \
    test:    -m pytest {posargs} --basetemp={envtmpdir} -p "no:cacheprovider" \
    test:    --rootdir={toxinidir} \
    test:    {toxinidir}/src/yukon/backend/test

    doctest: coverage run \
    doctest:    -m pytest {posargs} --basetemp={envtmpdir} -p "no:cacheprovider" \
    doctest:    --rootdir={toxinidir} \
    doctest:    {toxinidir}/src/yukon/backend/src


[testenv:docs]
basepython = python3.8
deps = -rrequirements.txt

# builds both frontend and backend docs
commands =
    sphinx-build -b html {toxinidir} {envtmpdir}


[testenv:gen-apidoc]
basepython = python3.8
whitelist_externals = rm
deps =
    sphinx-autoapi

# only applicable to the backend
# frontend JS docs should be manually generated
# more info in https://github.com/mozilla/sphinx-js#use
commands = 
    rm -rf docs/backend
    sphinx-apidoc \
        --doc-project library \
        --append-syspath \
        --output-dir docs/backend \
        src/yukon/backend/src


[testenv:report]
basepython = python3.8
deps = coverage
skip_install = true
commands =
    coverage combine --append
    coverage html -d {envtmpdir}
    coverage xml -o {envtmpdir}/coverage.xml


[testenv:mypy]
basepython = python3.8
deps = 
    mypy
    lxml
skip_install = true
commands =
    mypy src/yukon/backend/src/api \
         --cache-dir {envtmpdir} \
         --txt-report {envtmpdir}/mypy-report-lib \
         --config-file {toxinidir}/tox.ini
    mypy src/yukon/backend/src/devserv \
         --cache-dir {envtmpdir} \
         --txt-report {envtmpdir}/mypy-report-lib \
         --config-file {toxinidir}/tox.ini


[testenv:pylint]
basepython = python3.8
skip_install = true
deps =
    flake8
    doc8

commands = 
    flake8 --benchmark --tee --output-file={envtmpdir}/flake8.txt --filename=*.py src
    doc8 {toxinidir}/docs


[testenv:eslint]
whitelist_externals = npm
description = run the JavaScript linter (requires `npm install`)
deps =
    npm

commands =
    npm --prefix src/yukon/frontend install
    npm --prefix src/yukon/frontend run lint


[testenv:package]
basepython = python3.8
deps = 
    wheel
    twine

commands = 
    python src/yukon/backend/setup.py \
        sdist -d {toxworkdir}/package/dist \
        bdist_wheel -d {toxworkdir}/package/dist \
                    -b {envtmpdir}/tmp \
                    -k \
                    --build-number {env:BUILDKITE_BUILD_NUMBER:0}
    twine check {toxworkdir}/package/dist/*


[testenv:sonar]
basepython = python3.8
whitelist_externals = sonar-scanner

commands=
    sonar-scanner \
        -Dsonar.login={env:SONARQUBE_TOKEN:} \
        -Dsonar.buildString={env:BUILDKITE_BUILD_NUMBER:0} \
        -Dsonar.projectVersion={env:YUKON_MAJOR_MINOR_VERSION:0} \
        -Dsonar.working.directory={envtmpdir}/.scannerwork


[testenv:upload]
basepython = python3.8
skip_install = true
deps = 
    twine

commands = 
    twine upload -u __token__ -p {env:PYPI_PASSWORD:} {toxworkdir}/package/dist/*


[testenv:local]
usedevelop = true
deps =
    {[base]deps}
    {[dev]deps}
    {[testenv:docs]deps}
    {[testenv:mypy]deps}
    {[testenv:pylint]deps}
    {[testenv:eslint]deps}